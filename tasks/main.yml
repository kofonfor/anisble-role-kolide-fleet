- name: create ext volume for tmp
  file: state=directory path={{ ext_kolide_fleet_tmp_volume }} mode=1777

- name: create ext volume for certs
  file: state=directory path={{ ext_kolide_fleet_cert_volume }} mode=0750

- name: copy a server cert
  copy: remote_src=yes src=/etc/ssl/certs/ssl-cert-snakeoil.pem dest={{ ext_kolide_fleet_cert_volume }}/server.cert

- name: copy a server key
  copy: remote_src=yes src=/etc/ssl/private/ssl-cert-snakeoil.key dest={{ ext_kolide_fleet_cert_volume }}/server.key

- name: prepare a Kolide Fleet DB
  docker_container:
    name: kolide-fleet-prepare-db
    image: kolide/fleet
    read_only: yes
    env:
      KOLIDE_MYSQL_ADDRESS: "{{ kolide_fleet_mysql_address }}"
      KOLIDE_MYSQL_DATABASE: "{{ kolide_fleet_mysql_database }}"
      KOLIDE_MYSQL_USERNAME: "{{ kolide_fleet_mysql_user }}"
      KOLIDE_MYSQL_PASSWORD: "{{ kolide_fleet_mysql_password }}"
      KOLIDE_REDIS_ADDRESS: "{{ kolide_fleet_redis_address }}"
    command: fleet prepare db

- name: start a Kolide Fleet container
  docker_container:
    name: kolide-fleet
    image: kolide/fleet
    state: started
    recreate: yes
    restart_policy: always
    read_only: yes
    exposed_ports:
      - 8080
    ports:
      - "8080:8080"
    volumes:
      - "{{ ext_kolide_fleet_tmp_volume }}:/tmp"
      - "{{ ext_kolide_fleet_cert_volume }}:/certs"
    env:
      KOLIDE_MYSQL_ADDRESS: "{{ kolide_fleet_mysql_address }}"
      KOLIDE_MYSQL_DATABASE: "{{ kolide_fleet_mysql_database }}"
      KOLIDE_MYSQL_USERNAME: "{{ kolide_fleet_mysql_user }}"
      KOLIDE_MYSQL_PASSWORD: "{{ kolide_fleet_mysql_password }}"
      KOLIDE_REDIS_ADDRESS: "{{ kolide_fleet_redis_address }}"
      KOLIDE_AUTH_JWT_KEY: "{{ kolide_fleet_auth_jwt_key }}"
      KOLIDE_SERVER_CERT: "/certs/server.cert"
      KOLIDE_SERVER_KEY: "/certs/server.key"

- name: download fleetctl
  get_url: url="https://github.com/kolide/fleet/releases/download/2.0.2/fleet_2.0.2.zip" dest=/root/fleet.zip

- name: make /opt/fleet
  file: dest=/opt/fleet state=directory

- name: unpack fleet
  unarchive: copy=no src="/root/fleet.zip" dest=/opt/fleet

- name: create a link
  file: src=/opt/fleet/linux/fleetctl dest=/usr/local/bin/fleetctl state=link

- name: set fleet address
  command: /usr/local/bin/fleetctl config set --address https://127.0.0.1:8080

- name: skip TLS verification
  command: /usr/local/bin/fleetctl config set --tls-skip-verify true

- name: setup fleet params
  command: /usr/local/bin/fleetctl setup --email {{ kolide_fleet_email }} --password '{{ kolide_fleet_password }}' --org-name "{{ kolide_fleet_orgname }}"
  register: result
  failed_when: result.rc == 1 and result.stderr != "Kolide Fleet has already been setup"

- name: set the enroll secret
  command: mysql -e 'update app_configs set osquery_enroll_secret = "{{ kolide_fleet_enroll_secret }}" where id=1;' --batch -h 127.0.0.1 -u {{ docker_mysql_user }} -p{{ docker_mysql_password }} {{ docker_mysql_database }}
